// Generated by CoffeeScript 1.9.1
(function() {
  var Account, Room;

  Room = require("../models/Models").room;

  Account = require("../models/Models").account;

  module.exports = function(io) {
    return io.on("connection", function(socket) {
      var _playerId, _roomId;
      _playerId = null;
      _roomId = null;
      socket.on("join", function(data) {
        if (socket.request.session.playerId != null) {
          _playerId = socket.request.session.playerId;
        }
        if (data.roomId != null) {
          _roomId = data.roomId;
          socket.join(_roomId);
          console.log("'" + _playerId + "' has joined the room '" + _roomId + "''");
        } else {
          return socket.emit("error", {
            error: "Room ID was not included in the join request."
          });
        }
        return Room.findOne({
          _id: _roomId
        }).exec(function(err, room) {
          var definition, i, len, ref, results;
          socket.emit("word", {
            word: room.word
          });
          ref = room.definitions;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            definition = ref[i];
            results.push(socket.emit("definition", definition));
          }
          return results;
        });
      });
      return socket.on("definition", function(data) {
        if ((_playerId != null) && (_roomId != null)) {
          return Room.findOne({
            _id: _roomId
          }).exec(function(err, room) {
            var definition;
            if (err || (room == null)) {

            } else {
              definition = {
                definition: data.definition,
                playerId: _playerId
              };
              room.definitions.push(definition);
              room.save();
              socket.to(_roomId).emit("definition", definition);
              return console.log(room.definitions);
            }
          });
        }
      });
    });
  };

}).call(this);
